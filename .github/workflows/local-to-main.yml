# Takes care of general code quality checks and tests
# Should run when new features are being added to codebase
# and when codebase is being deployed.

name: local-to-main

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:

  # cypress-server-start:
  #   # we need to start up the server before running cypress
  #   runs-on: ubuntu-latest
  #   steps:
  #   - name: Start server
  #     run: npm start

  testing-job:
    # For unit and end to end testing
    runs-on: ubuntu-latest
    needs: cypress-server-start
    
    steps:
    - name: Checkout branch
      uses: actions/checkout@v2

    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '16'
        # cache: 'npm'

    - run: npm ci
    - run: npm run build --if-present

    # unit and End to end testing
    - name: Run Unit/Jest test
      run: npm jest

    - name: Run Cypress test
      run: npx cypress run
      uses: cypress-io/github-action@v2.9.7
      with:
        start: npm start
        config-file: cypress.json

  # linters and formatters are being done by Kian, omitted

  lint: 

    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '16'

    - run: npm ci

    - name: Fix css style 
      run: npx stylelint "**/*.css" --fix

    - name: Lint Code Base
      uses: github/super-linter@v4
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        LINTER_RULES_PATH: /
        CSS_FILE_NAME: .stylelintrc.json
        JAVASCRIPT_ES_CONFIG_FILE: .eslintrc.json
        VALIDATE_JAVASCRIPT_STANDARD: false
        VALIDATE_JSCPD: false
        VALIDATE_MARKDOWN: false
        VALIDATE_NATURAL_LANGUAGE: false
        VALIDATE_ENV: false
        IGNORE_GITIGNORED_FILES: true
        IGNORE_GENERATED_FILES: true

  formatting:

    runs-on: ubuntu-latest
    needs: lint

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      - run: npm ci

      # This only says which files have formatting problems. We also have
      # the option of having Prettier auto fix it all
      - name: Fix format
        run: npm run prettier

  sonarcloud-job:
    # For linting, formatting, and quality evaluation of code.
    runs-on: ubuntu-latest

    steps:
    - name: Checkout branch
      uses: actions/checkout@v2

    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '16'
        #cache: 'npm'

    # Quality
    # - name: Codacy Analysis CLI
    #   uses: codacy/codacy-analysis-cli-action@4.0.0
    #   with:
    #     fail-if-incomplete: true
    #     max-allowed-issues: 0
    #     project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
    #     run-docker-tools: true
    #     verbose: true
    #     upload: true
    - name: SonarCloud Scan
      uses: SonarSource/sonarcloud-github-action@v1.6
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  
  doc-generation-job:
    # For automatic documentation generation
    runs-on: ubuntu-latest

    steps:
    
    - name: Checkout branch
      uses: actions/checkout@v2

    - name: Run JSDoc
      uses: andstor/jsdoc-action@v1.2.0
      with:
        source_dir: ./source
        recurse: true
        output_dir: ./docs

    - name: Deploy
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./docs

  publish-changes-job:
    # To apply changes to the codebase
    runs-on: ubuntu-latest

    needs: formatting

    steps:

    - name: Publish fixes to the pull request branch
      uses: stefanzweifel/git-auto-commit-action@v4
      with:
        commit_message: Automated Change from Prettier
        commit_user_name: Automated Prettier Action
