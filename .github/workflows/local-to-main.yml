# Takes care of general code quality checks and tests
# Should run when new features are being added to codebase
# and when codebase is being deployed.

name: local-to-main

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:

  # cypress-server-start:
  #   # we need to start up the server before running cypress
  #   runs-on: ubuntu-latest
  #   steps:
  #   - name: Start server
  #     run: npm start

  unit-testing:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout branch
      uses: actions/checkout@v2

    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '16'
        # cache: 'npm'

    - run: npm ci
    - run: npm run build --if-present
  
    # unit testing
    - name: Run Unit/Jest test
      run: npm run unittest

  e2e-testing:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout branch
      uses: actions/checkout@v2

    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '16'
        # cache: 'npm'

    - run: npm ci
    - run: npm run build --if-present

    # Google testing OAuth
    - run: export CYPRESS_REACT_APP_GOOGLE_CLIENTID=540165433279-spiffkj5356cn57keeho8tc66clhpd92.apps.googleusercontent.com
    - run: export CYPRESS_REACT_APP_GOOGLE_CLIENT_SECRET=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
    - run: export CYPRESS_GOOGLE_REFRESH_TOKEN=1//04_bv_0JkeoVdCgYIARAAGAQSNwF-L9IrSyN-Zcfji83hFc63QnpezDC8a_1Tg6W3171wwdJ4BXXi0ZCDKWFLZ_u9BSR2C_xm52g
    - run: export cypress_googleRefreshToken=540165433279-spiffkj5356cn57keeho8tc66clhpd92.apps.googleusercontent.com
    - run: export cypress_googleClientId=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
    - run: export cypress_googleClientSecret=1//04_bv_0JkeoVdCgYIARAAGAQSNwF-L9IrSyN-Zcfji83hFc63QnpezDC8a_1Tg6W3171wwdJ4BXXi0ZCDKWFLZ_u9BSR2C_xm52g

    # e2e testing
    - name: Run Cypress test
      uses: cypress-io/github-action@v2.9.7
      with:
        start: npm start
        config-file: config/cypress.json

  lint: 

    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '16'

    - run: npm ci

    - name: Fix css style 
      run: npx stylelint "**/*.css" --fix

    - name: Lint Code Base
      uses: github/super-linter@v4
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        LINTER_RULES_PATH: /
        CSS_FILE_NAME: .stylelintrc.json
        JAVASCRIPT_ES_CONFIG_FILE: .eslintrc.json
        VALIDATE_JAVASCRIPT_STANDARD: false
        VALIDATE_JSCPD: false
        VALIDATE_MARKDOWN: false
        VALIDATE_NATURAL_LANGUAGE: false
        VALIDATE_ENV: false
        IGNORE_GITIGNORED_FILES: true
        IGNORE_GENERATED_FILES: true
      
    # Automatically run the formatter (should be pretty quick and less error prone than linting)
    - name: Fix format
      run: npm run prettier

    # After all linting and formatting, publish our fixes (must be on the same job)
    - name: Publish fixes to the pull request branch
      uses: stefanzweifel/git-auto-commit-action@v4
      with:
        commit_message: Automated Change from Prettier
        commit_user_name: Automated Prettier Action

  sonarcloud-job:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout branch
      uses: actions/checkout@v2

    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '16'

    - name: SonarCloud Scan
      uses: SonarSource/sonarcloud-github-action@v1.6
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  
  doc-generation-job:
    # For automatic documentation generation
    runs-on: ubuntu-latest

    steps:
    
    - name: Checkout branch
      uses: actions/checkout@v2

    - name: Run JSDoc
      uses: andstor/jsdoc-action@v1.2.0
      with:
        source_dir: ./source
        recurse: true
        output_dir: ./docs

    - name: Deploy
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./docs
